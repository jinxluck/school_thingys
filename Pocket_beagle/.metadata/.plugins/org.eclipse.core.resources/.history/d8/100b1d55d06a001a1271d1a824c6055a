/*
 * GPIO_controle.cpp
 *
 *  Created on: 20 Mar 2020
 *      Author: jinxluck
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "GPIO_controle.h"

char PATH[100] = "/sys/class/gpio/gpio";

/*
 * GPIO:
 *  fx 106 for gpio P1.06
 */
void init_gpio(int GPIO)
{
	printf(" *Setting pins to gpio\n");

	char command[50];
	memset(command, '\0', 50);

	char buffer[5];
	snprintf(buffer, 5, "%d", GPIO);

	strcat(command, "config-pin P");
	command[12] = buffer[0];
	command[13] = '.';
	command[14] = buffer[1];
	command[15] = buffer[2];
	strcat(command, " gpio");

	system(command);

	printf("   |-%s\n",command);
}

/*
 * direction:
 *  out = 1
 * 	in = 0
 *
 * 	GPIO:
 * 	 gpio number
 */
void set_direction(int GPIO, int direction)
{
	printf(" *Setting direction\n");

	FILE *fs;

	char dir_path[100];
	memset(dir_path, '\0', 100);

	char buffer[5];
	snprintf(buffer, 5, "%d", GPIO);

	strcat(dir_path, PATH);
	strcat(dir_path, buffer);
	strcat(dir_path, "/direction");

	fs=fopen(dir_path, "w");
	fseek(fs, 0, SEEK_SET);

	if(direction == 0)
	{
		fprintf(fs,"in");
		printf("   |-GPIO: %d is now an input\n");
	}
	else
	{
		fprintf(fs,"out");
		printf("   |-GPIO: %d is now an output\n");
	}

	fclose(fs);
}

/*
 * value:
 *  high = 1
 *  low = 0
 *
 * GPIO:
 *  gpio number
 */
void set_value(int GPIO, int value)
{
	FILE *fs;

	char dir_path[100];
	memset(dir_path, '\0', 100);

	char buffer[5];
	snprintf(buffer, 5, "%d", GPIO);

	char val[5];
	snprintf(val, 5, "%d", value);

	strcat(dir_path, PATH);
	strcat(dir_path, buffer);
	strcat(dir_path, "/value");

	fs=fopen(dir_path, "w");
	fseek(fs, 0, SEEK_SET);

	fprintf(fs, val);

	fclose(fs);
}

/*
 * GPIO:
 *  gpio number
 *
 * return value:
 *  the value of gpio XX
 */
int read_value(int GPIO)
{
	FILE *fs;

	char dir_path[100];
	memset(dir_path, '\0', 100);

	int value;

	char buffer[5];
	snprintf(buffer, 5, "%d", GPIO);

	strcat(dir_path, PATH);
	strcat(dir_path, buffer);
	strcat(dir_path, "/value");

	fs=fopen(dir_path, "r");
	fseek(fs, 0, SEEK_SET);

	fscanf(fs,"%d",&value);

	fclose(fs);

	return value;
}







